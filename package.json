{
  "name": "sfc-composer",
  "version": "0.5.0",
  "description": "",
  "repository": "tahul/sfc-composer",
  "license": "MIT",
  "sideEffects": false,
  "type": "module",
  "exports": {
    ".": {
      "types": "./dist/index.d.ts",
      "import": "./dist/index.mjs",
      "require": "./dist/index.cjs"
    },
    "./vue": {
      "types": "./vue.d.ts",
      "import": "./dist/vue.mjs",
      "require": "./dist/vue.cjs"
    },
    "./svelte": {
      "types": "./svelte.d.ts",
      "import": "./dist/svelte.mjs",
      "require": "./dist/svelte.cjs"
    },
    "./astro": {
      "types": "./astro.d.ts",
      "import": "./dist/astro.mjs",
      "require": "./dist/astro.cjs"
    }
  },
  "main": "./dist/index.cjs",
  "module": "./dist/index.mjs",
  "types": "./dist/index.d.ts",
  "files": [
    "dist",
    "vue.d.ts"
  ],
  "scripts": {
    "build": "unbuild -c build.config.ts",
    "stub": "unbuild -c build.config.ts --stub",
    "play": "pnpm build && pnpm -r --filter=./playground run dev",
    "play:build": "pnpm build && pnpm -r --filter=./playground run build",
    "lint": "eslint --cache --ext .ts,.js,.mjs,.cjs . --quiet",
    "lint:fix": "eslint --cache --ext .ts,.js,.mjs,.cjs . --fix --quiet",
    "prepack": "pnpm run build",
    "release": "release-it",
    "test": "pnpm lint && vitest run --coverage",
    "test:ui": "vitest --ui --open=false"
  },
  "dependencies": {
    "magic-string": "^0.30.3"
  },
  "devDependencies": {
    "@antfu/eslint-config": "^0.43.1",
    "@astrojs/compiler": "^2.1.0",
    "@vitest/coverage-c8": "^0.33.0",
    "@vitest/coverage-v8": "^0.34.5",
    "@vitest/ui": "^0.34.5",
    "changelogen": "^0.5.5",
    "eslint": "^8.50.0",
    "release-it": "^16.2.1",
    "svelte": "^4.2.1",
    "typescript": "^5.2.2",
    "unbuild": "^2.0.0",
    "vite": "^4.4.9",
    "vitest": "^0.34.5",
    "vue": "^3.3.4"
  },
  "packageManager": "pnpm@8.6.12",
  "release-it": {
    "hooks": {
      "before:init": [
        "pnpm build",
        "pnpm test"
      ]
    },
    "npm": {
      "access": "public"
    },
    "git": {
      "commitMessage": "chore(release): release v${version}"
    },
    "github": {
      "release": true,
      "releaseName": "v${version}"
    }
  }
}
